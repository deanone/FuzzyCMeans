<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="navtree_8js" kind="file" language="C++">
    <compoundname>navtree.js</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal"><sp/>@licstart<sp/><sp/>The<sp/>following<sp/>is<sp/>the<sp/>entire<sp/>license<sp/>notice<sp/>for<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/>JavaScript<sp/>code<sp/>in<sp/>this<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>Copyright<sp/>(C)<sp/>1997-2017<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline><highlight class="normal"><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline><highlight class="normal"><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline><highlight class="normal"><sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline><highlight class="normal"><sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>@licend<sp/><sp/>The<sp/>above<sp/>is<sp/>the<sp/>entire<sp/>license<sp/>notice</highlight></codeline>
<codeline><highlight class="normal"><sp/>for<sp/>the<sp/>JavaScript<sp/>code<sp/>in<sp/>this<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">var<sp/>navTreeSubIndices<sp/>=<sp/>new<sp/>Array();</highlight></codeline>
<codeline><highlight class="normal">var<sp/>arrowDown<sp/>=<sp/>&apos;&amp;#9660;&apos;;</highlight></codeline>
<codeline><highlight class="normal">var<sp/>arrowRight<sp/>=<sp/>&apos;&amp;#9654;&apos;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>getData(varName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>i<sp/>=<sp/>varName.lastIndexOf(&apos;/&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>n<sp/>=<sp/>i&gt;=0<sp/>?<sp/>varName.substring(i+1)<sp/>:<sp/>varName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>eval(n.replace(/\-/g,&apos;_&apos;));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>stripPath(uri)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>uri.substring(uri.lastIndexOf(&apos;/&apos;)+1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>stripPath2(uri)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>i<sp/>=<sp/>uri.lastIndexOf(&apos;/&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>s<sp/>=<sp/>uri.substring(i+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>m<sp/>=<sp/>uri.substring(0,i+1).match(/\/d\w\/d\w\w\/$/);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>m<sp/>?<sp/>uri.substring(i-6)<sp/>:<sp/>s;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>hashValue()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>$(location).attr(&apos;hash&apos;).substring(1).replace(/[^\w\-]/g,&apos;&apos;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>hashUrl()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>&apos;#&apos;+hashValue();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>pathName()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>$(location).attr(&apos;pathname&apos;).replace(/[^-A-Za-z0-9+&amp;@#/%?=~_|!:,.;\(\)]/g,<sp/>&apos;&apos;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>localStorageSupported()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>&apos;localStorage&apos;<sp/>in<sp/>window<sp/>&amp;&amp;<sp/>window[&apos;localStorage&apos;]<sp/>!==<sp/>null<sp/>&amp;&amp;<sp/>window.localStorage.getItem;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>catch(e)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>storeLink(link)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!$(&quot;#nav-sync&quot;).hasClass(&apos;sync&apos;)<sp/>&amp;&amp;<sp/>localStorageSupported())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window.localStorage.setItem(&apos;navpath&apos;,link);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>deleteLink()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>window.localStorage.setItem(&apos;navpath&apos;,&apos;&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>cachedLink()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>window.localStorage.getItem(&apos;navpath&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>&apos;&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>getScript(scriptName,func,show)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>head<sp/>=<sp/>document.getElementsByTagName(&quot;head&quot;)[0];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>script<sp/>=<sp/>document.createElement(&apos;script&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>script.id<sp/>=<sp/>scriptName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>script.type<sp/>=<sp/>&apos;text/javascript&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>script.onload<sp/>=<sp/>func;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>script.src<sp/>=<sp/>scriptName+&apos;.js&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>($.browser.msie<sp/>&amp;&amp;<sp/>$.browser.version&lt;=8)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>script.onload<sp/>does<sp/>not<sp/>work<sp/>with<sp/>older<sp/>versions<sp/>of<sp/>IE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>script.onreadystatechange<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(script.readyState==&apos;complete&apos;<sp/>||<sp/>script.readyState==&apos;loaded&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func();<sp/>if<sp/>(show)<sp/>showRoot();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>head.appendChild(script);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>createIndent(o,domNode,node,level)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>level=-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>n<sp/>=<sp/>node;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(n.parentNode)<sp/>{<sp/>level++;<sp/>n=n.parentNode;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(node.childrenData)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>imgNode<sp/>=<sp/>document.createElement(&quot;span&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.className<sp/>=<sp/>&apos;arrow&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.style.paddingLeft=(16*level).toString()+&apos;px&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.innerHTML=arrowRight;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node.plus_img<sp/>=<sp/>imgNode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle<sp/>=<sp/>document.createElement(&quot;a&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.href<sp/>=<sp/>&quot;javascript:void(0)&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.onclick<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(node.expanded)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).slideUp(&quot;fast&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.innerHTML=arrowRight;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>node,<sp/>false,<sp/>false);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.appendChild(imgNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>domNode.appendChild(node.expandToggle);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>span<sp/>=<sp/>document.createElement(&quot;span&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>span.className<sp/>=<sp/>&apos;arrow&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>span.style.width<sp/><sp/><sp/>=<sp/>16*(level+1)+&apos;px&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>span.innerHTML<sp/>=<sp/>&apos;&amp;#160;&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>domNode.appendChild(span);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>animationInProgress<sp/>=<sp/>false;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>gotoAnchor(anchor,aname,updateLocation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>pos,<sp/>docContent<sp/>=<sp/>$(&apos;#doc-content&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>ancParent<sp/>=<sp/>$(anchor.parent());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(ancParent.hasClass(&apos;memItemLeft&apos;)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.hasClass(&apos;fieldname&apos;)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.hasClass(&apos;fieldtype&apos;)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.is(&apos;:header&apos;))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>ancParent.position().top;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(anchor.position())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>anchor.position().top;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(pos)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>dist<sp/>=<sp/>Math.abs(Math.min(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos-docContent.offset().top,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docContent[0].scrollHeight-</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docContent.height()-docContent.scrollTop()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>animationInProgress=true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>docContent.animate({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scrollTop:<sp/>pos<sp/>+<sp/>docContent.scrollTop()<sp/>-<sp/>docContent.offset().top</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},Math.max(50,Math.min(500,dist)),function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(updateLocation)<sp/>window.location.href=aname;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>animationInProgress=false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>newNode(o,<sp/>po,<sp/>text,<sp/>link,<sp/>childrenData,<sp/>lastNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>node<sp/>=<sp/>new<sp/>Object();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.children<sp/>=<sp/>Array();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.childrenData<sp/>=<sp/>childrenData;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.depth<sp/>=<sp/>po.depth<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.relpath<sp/>=<sp/>po.relpath;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.isLast<sp/>=<sp/>lastNode;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.li<sp/>=<sp/>document.createElement(&quot;li&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>po.getChildrenUL().appendChild(node.li);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.parentNode<sp/>=<sp/>po;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.itemDiv<sp/>=<sp/>document.createElement(&quot;div&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.itemDiv.className<sp/>=<sp/>&quot;item&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.labelSpan<sp/>=<sp/>document.createElement(&quot;span&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.labelSpan.className<sp/>=<sp/>&quot;label&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>createIndent(o,node.itemDiv,node,0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.itemDiv.appendChild(node.labelSpan);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.li.appendChild(node.itemDiv);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>a<sp/>=<sp/>document.createElement(&quot;a&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.labelSpan.appendChild(a);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.label<sp/>=<sp/>document.createTextNode(text);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.expanded<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>a.appendChild(node.label);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(link)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>url;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(link.substring(0,1)==&apos;^&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/>link.substring(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>url;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/>node.relpath+link;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.className<sp/>=<sp/>stripPath(link.replace(&apos;#&apos;,&apos;:&apos;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(link.indexOf(&apos;#&apos;)!=-1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>aname<sp/>=<sp/>&apos;#&apos;+link.split(&apos;#&apos;)[1];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>srcPage<sp/>=<sp/>stripPath(pathName());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>targetPage<sp/>=<sp/>stripPath(link.split(&apos;#&apos;)[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/>srcPage!=targetPage<sp/>?<sp/>url<sp/>:<sp/>&quot;javascript:void(0)&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/>function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storeLink(link);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!$(a).parent().parent().hasClass(&apos;selected&apos;))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeAttr(&apos;id&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(a).parent().parent().addClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(a).parent().parent().attr(&apos;id&apos;,&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>anchor<sp/>=<sp/>$(aname);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotoAnchor(anchor,aname,true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/>url;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/>function()<sp/>{<sp/>storeLink(link);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(childrenData<sp/>!=<sp/>null)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.className<sp/>=<sp/>&quot;nolink&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/>&quot;javascript:void(0)&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/>node.expandToggle.onclick;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.childrenUL<sp/>=<sp/>null;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>node.getChildrenUL<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!node.childrenUL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL<sp/>=<sp/>document.createElement(&quot;ul&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL.className<sp/>=<sp/>&quot;children_ul&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL.style.display<sp/>=<sp/>&quot;none&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.li.appendChild(node.childrenUL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>node.childrenUL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>node;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>showRoot()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>headerHeight<sp/>=<sp/>$(&quot;#top&quot;).height();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>footerHeight<sp/>=<sp/>$(&quot;#nav-path&quot;).height();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>windowHeight<sp/>=<sp/>$(window).height()<sp/>-<sp/>headerHeight<sp/>-<sp/>footerHeight;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>(function<sp/>(){<sp/>//<sp/>retry<sp/>until<sp/>we<sp/>can<sp/>scroll<sp/>to<sp/>the<sp/>selected<sp/>item</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>navtree=$(&apos;#nav-tree&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navtree.scrollTo(&apos;#selected&apos;,0,{offset:-windowHeight/2});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(err)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTimeout(arguments.callee,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>expandNode(o,<sp/>node,<sp/>imm,<sp/>showRoot)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(node.childrenData<sp/>&amp;&amp;<sp/>!node.expanded)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(typeof(node.childrenData)===&apos;string&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/><sp/><sp/><sp/>=<sp/>node.childrenData;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getScript(node.relpath+varName,function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>node,<sp/>imm,<sp/>showRoot);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>showRoot);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!node.childrenVisited)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getNode(o,<sp/>node);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>if<sp/>(imm<sp/>||<sp/>($.browser.msie<sp/>&amp;&amp;<sp/>$.browser.version&gt;8))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>somehow<sp/>slideDown<sp/>jumps<sp/>to<sp/>the<sp/>start<sp/>of<sp/>tree<sp/>for<sp/>IE9<sp/>:-(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).show();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).slideDown(&quot;fast&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.innerHTML<sp/>=<sp/>arrowDown;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>glowEffect(n,duration)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>n.addClass(&apos;glow&apos;).delay(duration).queue(function(next){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(this).removeClass(&apos;glow&apos;);next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>highlightAnchor()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>aname<sp/>=<sp/>hashUrl();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>anchor<sp/>=<sp/>$(aname);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(anchor.parent().attr(&apos;class&apos;)==&apos;memItemLeft&apos;){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>rows<sp/>=<sp/>$(&apos;.memberdecls<sp/>tr[class$=&quot;&apos;+hashValue()+&apos;&quot;]&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(rows.children(),300);<sp/>//<sp/>member<sp/>without<sp/>details</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(anchor.parent().attr(&apos;class&apos;)==&apos;fieldname&apos;){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent().parent(),1000);<sp/>//<sp/>enum<sp/>value</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(anchor.parent().attr(&apos;class&apos;)==&apos;fieldtype&apos;){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent().parent(),1000);<sp/>//<sp/>struct<sp/>field</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(anchor.parent().is(&quot;:header&quot;))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent(),1000);<sp/>//<sp/>section<sp/>header</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.next(),1000);<sp/>//<sp/>normal<sp/>member</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gotoAnchor(anchor,aname,false);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>selectAndHighlight(hash,n)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(hash)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>link=stripPath(pathName())+&apos;:&apos;+hash.substring(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a=$(&apos;.item<sp/>a[class$=&quot;&apos;+link+&apos;&quot;]&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(a<sp/>&amp;&amp;<sp/>a.length)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.parent().parent().addClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.parent().parent().attr(&apos;id&apos;,&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>highlightAnchor();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(n)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(n.itemDiv).addClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(n.itemDiv).attr(&apos;id&apos;,&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>($(&apos;#nav-tree-contents<sp/>.item:first&apos;).hasClass(&apos;selected&apos;))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(&apos;#nav-sync&apos;).css(&apos;top&apos;,&apos;30px&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(&apos;#nav-sync&apos;).css(&apos;top&apos;,&apos;5px&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>showRoot();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>showNode(o,<sp/>node,<sp/>index,<sp/>hash)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(node<sp/>&amp;&amp;<sp/>node.childrenData)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(typeof(node.childrenData)===&apos;string&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/><sp/><sp/><sp/>=<sp/>node.childrenData;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getScript(node.relpath+varName,function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,node,index,hash);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!node.childrenVisited)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getNode(o,<sp/>node);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).css({&apos;display&apos;:&apos;block&apos;});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.innerHTML<sp/>=<sp/>arrowDown;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>n<sp/>=<sp/>node.children[o.breadcrumbs[index]];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index+1&lt;o.breadcrumbs.length)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,n,index+1,hash);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(typeof(n.childrenData)===&apos;string&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/>=<sp/>n.childrenData;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getScript(n.relpath+varName,function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded=false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,node,index,hash);<sp/>//<sp/>retry<sp/>with<sp/>child<sp/>node<sp/>expanded</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>rootBase<sp/>=<sp/>stripPath(o.toroot.replace(/\..+$/,<sp/>&apos;&apos;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rootBase==&quot;index&quot;<sp/>||<sp/>rootBase==&quot;pages&quot;<sp/>||<sp/>rootBase==&quot;search&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>n,<sp/>true,<sp/>true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectAndHighlight(hash,n);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>selectAndHighlight(hash);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>removeToInsertLater(element)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>parentNode<sp/>=<sp/>element.parentNode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>nextSibling<sp/>=<sp/>element.nextSibling;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>parentNode.removeChild(element);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>function()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nextSibling)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parentNode.insertBefore(element,<sp/>nextSibling);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parentNode.appendChild(element);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>getNode(o,<sp/>po)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>insertFunction<sp/>=<sp/>removeToInsertLater(po.li);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>po.childrenVisited<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>l<sp/>=<sp/>po.childrenData.length-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(var<sp/>i<sp/>in<sp/>po.childrenData)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>nodeData<sp/>=<sp/>po.childrenData[i];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>po.children[i]<sp/>=<sp/>newNode(o,<sp/>po,<sp/>nodeData[0],<sp/>nodeData[1],<sp/>nodeData[2],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i==l);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>insertFunction();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>gotoNode(o,subIndex,root,hash,relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>nti<sp/>=<sp/>navTreeSubIndices[subIndex][root+hash];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.breadcrumbs<sp/>=<sp/>$.extend(true,<sp/>[],<sp/>nti<sp/>?<sp/>nti<sp/>:<sp/>navTreeSubIndices[subIndex][root]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!o.breadcrumbs<sp/>&amp;&amp;<sp/>root!=NAVTREE[0][1])<sp/>{<sp/>//<sp/>fallback:<sp/>show<sp/>index</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>navTo(o,NAVTREE[0][1],&quot;&quot;,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeAttr(&apos;id&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(o.breadcrumbs)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>o.breadcrumbs.unshift(0);<sp/>//<sp/>add<sp/>0<sp/>for<sp/>root<sp/>node</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>showNode(o,<sp/>o.node,<sp/>0,<sp/>hash);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>navTo(o,root,hash,relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>link<sp/>=<sp/>cachedLink();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(link)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>parts<sp/>=<sp/>link.split(&apos;#&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>parts[0];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(parts.length&gt;1)<sp/>hash<sp/>=<sp/>&apos;#&apos;+parts[1].replace(/[^\w\-]/g,&apos;&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>hash=&apos;&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(hash.match(/^#l\d+$/))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>anchor=$(&apos;a[name=&apos;+hash.substring(1)+&apos;]&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent(),1000);<sp/>//<sp/>line<sp/>number</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>hash=&apos;&apos;;<sp/>//<sp/>strip<sp/>line<sp/>number<sp/>anchors</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>url=root+hash;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>i=-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(NAVTREEINDEX[i+1]&lt;=url)<sp/>i++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(i==-1)<sp/>{<sp/>i=0;<sp/>root=NAVTREE[0][1];<sp/>}<sp/>//<sp/>fallback:<sp/>show<sp/>index</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(navTreeSubIndices[i])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>gotoNode(o,i,root,hash,relpath)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>getScript(relpath+&apos;navtreeindex&apos;+i,function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navTreeSubIndices[i]<sp/>=<sp/>eval(&apos;NAVTREEINDEX&apos;+i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(navTreeSubIndices[i])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotoNode(o,i,root,hash,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>showSyncOff(n,relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>n.html(&apos;&lt;img<sp/>src=&quot;&apos;+relpath+&apos;sync_off.png&quot;<sp/>title=&quot;&apos;+SYNCOFFMSG+&apos;&quot;/&gt;&apos;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>showSyncOn(n,relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>n.html(&apos;&lt;img<sp/>src=&quot;&apos;+relpath+&apos;sync_on.png&quot;<sp/>title=&quot;&apos;+SYNCONMSG+&apos;&quot;/&gt;&apos;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>toggleSyncButton(relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>navSync<sp/>=<sp/>$(&apos;#nav-sync&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(navSync.hasClass(&apos;sync&apos;))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.removeClass(&apos;sync&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>showSyncOff(navSync,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>storeLink(stripPath2(pathName())+hashUrl());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.addClass(&apos;sync&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>showSyncOn(navSync,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deleteLink();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>initNavTree(toroot,relpath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>o<sp/>=<sp/>new<sp/>Object();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.toroot<sp/>=<sp/>toroot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node<sp/>=<sp/>new<sp/>Object();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.li<sp/>=<sp/>document.getElementById(&quot;nav-tree-contents&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.childrenData<sp/>=<sp/>NAVTREE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.children<sp/>=<sp/>new<sp/>Array();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.childrenUL<sp/>=<sp/>document.createElement(&quot;ul&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.getChildrenUL<sp/>=<sp/>function()<sp/>{<sp/>return<sp/>o.node.childrenUL;<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.li.appendChild(o.node.childrenUL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.depth<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.relpath<sp/>=<sp/>relpath;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.expanded<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.isLast<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.plus_img<sp/>=<sp/>document.createElement(&quot;span&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.plus_img.className<sp/>=<sp/>&apos;arrow&apos;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>o.node.plus_img.innerHTML<sp/>=<sp/>arrowRight;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>navSync<sp/>=<sp/>$(&apos;#nav-sync&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(cachedLink())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showSyncOff(navSync,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navSync.removeClass(&apos;sync&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showSyncOn(navSync,relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.click(function(){<sp/>toggleSyncButton(relpath);<sp/>});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>$(window).load(function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>navTo(o,toroot,hashUrl(),relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>showRoot();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>$(window).bind(&apos;hashchange&apos;,<sp/>function(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>if<sp/>(window.location.hash<sp/>&amp;&amp;<sp/>window.location.hash.length&gt;1){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>($(location).attr(&apos;hash&apos;)){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>clslink=stripPath(pathName())+&apos;:&apos;+hashValue();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=$(&apos;.item<sp/>a[class$=&quot;&apos;+clslink.replace(/&lt;/g,&apos;\\3c<sp/>&apos;)+&apos;&quot;]&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(a==null<sp/>||<sp/>!$(a).parent().parent().hasClass(&apos;selected&apos;)){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeAttr(&apos;id&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>link=stripPath2(pathName());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navTo(o,link,hashUrl(),relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(!animationInProgress)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;#doc-content&apos;).scrollTop(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeClass(&apos;selected&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&apos;.item&apos;).removeAttr(&apos;id&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navTo(o,toroot,hashUrl(),relpath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">/*<sp/>@license-end<sp/>*/</highlight></codeline>
    </programlisting>
    <location file="D:\VisualStudio2015Projects\FuzzyCMeans\FuzzyCMeans\doc/html/navtree.js"/>
  </compounddef>
</doxygen>
