<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_data_types_8h" kind="file" language="C++">
    <compoundname>DataTypes.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">ctime</includes>
    <includes local="no">cmath</includes>
    <includes local="no">climits</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">numeric</includes>
    <includes local="no">complex</includes>
    <includes local="no">functional</includes>
    <includedby refid="_cluster_8h" local="yes">Cluster.h</includedby>
    <includedby refid="_point_8h" local="yes">Point.h</includedby>
    <includedby refid="_fuzzy_c_means_8h" local="yes">FuzzyCMeans.h</includedby>
    <includedby refid="_generic_func_8h" local="yes">GenericFunc.h</includedby>
    <incdepgraph>
      <node id="58">
        <label>functional</label>
      </node>
      <node id="43">
        <label>DataTypes.h</label>
        <link refid="_data_types_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>cmath</label>
      </node>
      <node id="56">
        <label>numeric</label>
      </node>
      <node id="47">
        <label>string</label>
      </node>
      <node id="54">
        <label>map</label>
      </node>
      <node id="45">
        <label>fstream</label>
      </node>
      <node id="49">
        <label>ctime</label>
      </node>
      <node id="52">
        <label>unistd.h</label>
      </node>
      <node id="53">
        <label>vector</label>
      </node>
      <node id="46">
        <label>sstream</label>
      </node>
      <node id="48">
        <label>cstdlib</label>
      </node>
      <node id="44">
        <label>iostream</label>
      </node>
      <node id="51">
        <label>climits</label>
      </node>
      <node id="57">
        <label>complex</label>
      </node>
      <node id="55">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="59">
        <label>DataTypes.h</label>
        <link refid="_data_types_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Cluster.h</label>
        <link refid="_cluster_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>Point.h</label>
        <link refid="_point_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>GenericFunc.h</label>
        <link refid="_generic_func_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>FuzzyCMeans.h</label>
        <link refid="_fuzzy_c_means_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="68">
        <label>GenericFunc.cpp</label>
        <link refid="_generic_func_8cpp"/>
      </node>
      <node id="66">
        <label>Point.cpp</label>
        <link refid="_point_8cpp"/>
      </node>
      <node id="61">
        <label>Cluster.cpp</label>
        <link refid="_cluster_8cpp"/>
      </node>
      <node id="63">
        <label>FuzzyCMeans.cpp</label>
        <link refid="_fuzzy_c_means_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_data_types_8h_1a64be07a13efb96ba9d376c4cbc6f501e" prot="public" static="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>typedef std::vector&lt;float&gt; FloatVector</definition>
        <argsstring></argsstring>
        <name>FloatVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="23" column="1" bodyfile="DataTypes.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a90fed7f97f1803c7719d26e6f21b4de6" prot="public" static="no">
        <type>std::vector&lt; <ref refid="_data_types_8h_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref> &gt;</type>
        <definition>typedef std::vector&lt;FloatVector&gt; FloatVector2D</definition>
        <argsstring></argsstring>
        <name>FloatVector2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="24" column="1" bodyfile="DataTypes.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a82f6bc76e1c7a0f51bf3e95ad5d3c590" prot="public" static="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>typedef std::vector&lt;double&gt; DoubleVector</definition>
        <argsstring></argsstring>
        <name>DoubleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="25" column="1" bodyfile="DataTypes.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a7e70d37182fdafec492c4dd396c9698c" prot="public" static="no">
        <type>std::vector&lt; <ref refid="_data_types_8h_1a82f6bc76e1c7a0f51bf3e95ad5d3c590" kindref="member">DoubleVector</ref> &gt;</type>
        <definition>typedef std::vector&lt;DoubleVector&gt; DoubleVector2D</definition>
        <argsstring></argsstring>
        <name>DoubleVector2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="26" column="1" bodyfile="DataTypes.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a9b8f2f96749808efd0d975e75d96a71c" prot="public" static="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>typedef std::vector&lt;int&gt; IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="27" column="1" bodyfile="DataTypes.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a2611314ab2c7ffc99f4b34f959b4723c" prot="public" static="no">
        <type>std::vector&lt; <ref refid="_data_types_8h_1a9b8f2f96749808efd0d975e75d96a71c" kindref="member">IntVector</ref> &gt;</type>
        <definition>typedef std::vector&lt;IntVector&gt; IntVector2D</definition>
        <argsstring></argsstring>
        <name>IntVector2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="28" column="1" bodyfile="DataTypes.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1ab8e1ede88e2ff1c3b448334e6cbd3533" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; StringVector</definition>
        <argsstring></argsstring>
        <name>StringVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="29" column="1" bodyfile="DataTypes.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1acccc44108a5c4da23723c861fdaf8ed5" prot="public" static="no">
        <type>std::vector&lt; <ref refid="_data_types_8h_1ab8e1ede88e2ff1c3b448334e6cbd3533" kindref="member">StringVector</ref> &gt;</type>
        <definition>typedef std::vector&lt;StringVector&gt; StringVector2D</definition>
        <argsstring></argsstring>
        <name>StringVector2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="30" column="1" bodyfile="DataTypes.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1aafe152bbcb51930b658b8a4406f4d67e" prot="public" static="no">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>typedef std::pair&lt;int,int&gt; IntIntPair</definition>
        <argsstring></argsstring>
        <name>IntIntPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="31" column="1" bodyfile="DataTypes.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a3d5049745a50e0c457cb380125e045dc" prot="public" static="no">
        <type>std::pair&lt; int, float &gt;</type>
        <definition>typedef std::pair&lt;int,float&gt; IntFloatPair</definition>
        <argsstring></argsstring>
        <name>IntFloatPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="32" column="1" bodyfile="DataTypes.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1a1972afbb2da11833cc5c4e7dda7936cf" prot="public" static="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>typedef std::map&lt;int,int&gt; IntIntMap</definition>
        <argsstring></argsstring>
        <name>IntIntMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="33" column="1" bodyfile="DataTypes.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1afae9076c89b4ed1654b0f85beb47af82" prot="public" static="no">
        <type>std::map&lt; int, <ref refid="_data_types_8h_1a9b8f2f96749808efd0d975e75d96a71c" kindref="member">IntVector</ref> &gt;</type>
        <definition>typedef std::map&lt;int,IntVector&gt; IntIntVectorMap</definition>
        <argsstring></argsstring>
        <name>IntIntVectorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="34" column="1" bodyfile="DataTypes.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_data_types_8h_1ae9ec0f616e5edddb88bd7cba63e2ea88" prot="public" static="no">
        <type>std::map&lt; int, <ref refid="_data_types_8h_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref> &gt;</type>
        <definition>typedef std::map&lt;int,FloatVector&gt; IntFloatVectorMap</definition>
        <argsstring></argsstring>
        <name>IntFloatVectorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataTypes.h" line="35" column="1" bodyfile="DataTypes.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DATATYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATATYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_data_types_8h_1a64be07a13efb96ba9d376c4cbc6f501e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="_data_types_8h_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref>;</highlight></codeline>
<codeline lineno="24" refid="_data_types_8h_1a90fed7f97f1803c7719d26e6f21b4de6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;FloatVector&gt;<sp/><ref refid="_data_types_8h_1a90fed7f97f1803c7719d26e6f21b4de6" kindref="member">FloatVector2D</ref>;</highlight></codeline>
<codeline lineno="25" refid="_data_types_8h_1a82f6bc76e1c7a0f51bf3e95ad5d3c590" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><ref refid="_data_types_8h_1a82f6bc76e1c7a0f51bf3e95ad5d3c590" kindref="member">DoubleVector</ref>;</highlight></codeline>
<codeline lineno="26" refid="_data_types_8h_1a7e70d37182fdafec492c4dd396c9698c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;DoubleVector&gt;<sp/><ref refid="_data_types_8h_1a7e70d37182fdafec492c4dd396c9698c" kindref="member">DoubleVector2D</ref>;</highlight></codeline>
<codeline lineno="27" refid="_data_types_8h_1a9b8f2f96749808efd0d975e75d96a71c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="_data_types_8h_1a9b8f2f96749808efd0d975e75d96a71c" kindref="member">IntVector</ref>;</highlight></codeline>
<codeline lineno="28" refid="_data_types_8h_1a2611314ab2c7ffc99f4b34f959b4723c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;IntVector&gt;<sp/><ref refid="_data_types_8h_1a2611314ab2c7ffc99f4b34f959b4723c" kindref="member">IntVector2D</ref>;</highlight></codeline>
<codeline lineno="29" refid="_data_types_8h_1ab8e1ede88e2ff1c3b448334e6cbd3533" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="_data_types_8h_1ab8e1ede88e2ff1c3b448334e6cbd3533" kindref="member">StringVector</ref>;</highlight></codeline>
<codeline lineno="30" refid="_data_types_8h_1acccc44108a5c4da23723c861fdaf8ed5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;StringVector&gt;<sp/><ref refid="_data_types_8h_1acccc44108a5c4da23723c861fdaf8ed5" kindref="member">StringVector2D</ref>;</highlight></codeline>
<codeline lineno="31" refid="_data_types_8h_1aafe152bbcb51930b658b8a4406f4d67e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/><ref refid="_data_types_8h_1aafe152bbcb51930b658b8a4406f4d67e" kindref="member">IntIntPair</ref>;</highlight></codeline>
<codeline lineno="32" refid="_data_types_8h_1a3d5049745a50e0c457cb380125e045dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="_data_types_8h_1a3d5049745a50e0c457cb380125e045dc" kindref="member">IntFloatPair</ref>;</highlight></codeline>
<codeline lineno="33" refid="_data_types_8h_1a1972afbb2da11833cc5c4e7dda7936cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;int,int&gt;<sp/><ref refid="_data_types_8h_1a1972afbb2da11833cc5c4e7dda7936cf" kindref="member">IntIntMap</ref>;</highlight></codeline>
<codeline lineno="34" refid="_data_types_8h_1afae9076c89b4ed1654b0f85beb47af82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;int,IntVector&gt;<sp/><ref refid="_data_types_8h_1afae9076c89b4ed1654b0f85beb47af82" kindref="member">IntIntVectorMap</ref>;</highlight></codeline>
<codeline lineno="35" refid="_data_types_8h_1ae9ec0f616e5edddb88bd7cba63e2ea88" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;int,FloatVector&gt;<sp/><ref refid="_data_types_8h_1ae9ec0f616e5edddb88bd7cba63e2ea88" kindref="member">IntFloatVectorMap</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>DATATYPES_H</highlight></codeline>
    </programlisting>
    <location file="DataTypes.h"/>
  </compounddef>
</doxygen>
